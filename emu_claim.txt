CLAIM                                                                                                                              
AUTHOR: Mihika
Roll Number: 2301CS31 

Declaration of Authorship
This text (txt extension) file, claims.txt, is part of the assignment of CS2102 at the department of Computer Science and Engineering, Indian Institute of Technology, Patna . 

****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
Files:

All the files I submitted, asm.cpp and emu.cpp, have my name and roll number at the start, along with a declaration of authorship.

I have uploaded asm.cpp , emu.cpp , bubble_sort.asm , product.asm, subtract.asm, sum.asm , swap.asm , test1.asm , test2.asm , test3.asm , test4.asm. Along with this i am also uploading the evidence for Assembler including the output files from all the test examples uploaded by me. 

All the test files have been tested and work properly. 

****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
Compilation instructions:
****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************

	
	g++ emu.cpp -o emutest

	Enter the machine code filename(for example machineCode.o) and then execute the Instructions from the Instruction Table.
	Files should be in the same folder.


	Commands are 
	 -dump     Display a memory dump
         -t        Step through code one line at a time
         -run      Run the code until completion
         -reg      Display register and stack pointer (SP) values
         -isa      Show the instruction set
         -read     Read from memory
         -write    Write to memory

Assumptions:
============================================================================================================================================================================================
    * Mnemonic named “data” is always used at the end of assembly code.

NOTE:
============================================================================================================================================================================================
	* Every claim about assembler is already submitted and it satisfies here too (for emulator)
	* all the commands work as mentioned above.

The emulator: 
============================================================================================================================================================================================
1) test1.asm
#Input: machineCode.o
#Output:Machine code loaded successfully from machineCode.o
	Segmentation Fault
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2)test2.asm
#Input: machineCode.o
#Output: 
Error: Unable to open file machineCode.o
	{Since it contains errors.}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
****logs are getting generated by the name "logFile.txt" everytime because i have created folder so every testcase i took so in different folders we can have file named same in different folders. ****                                                                            

3)test3.asm
#Input: machineCode.o
#Output: Machine code loaded successfully from machineCode.o
	but it won't execute any instructions because HALT is not present.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

4)test4.asm
#Input: machineCode.o
#Output: Machine code loaded successfully from machineCode.o
	 Compiles successfully with all functionalities working.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

5)bubble_sort.asm
#Input: machineCode.o
#Output: Machine code loaded successfully from machineCode.o
	 Compiles successfully with all functionalities working.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

6)product.asm
#Input: machineCode.o
#Output: Machine code loaded successfully from machineCode.o
	 Compiles successfully with all functionalities working.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

7)subtract.asm
#Input: machineCode.o
#Output: 
	Error: Unable to open file  machineCode.o
	{Since it contains errors.}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

8)sum.asm
#Input: machineCode.o
#Output: Machine code loaded successfully from machineCode.o
	 Compiles successfully with all functionalities working.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

9)swap.asm
#Input: machineCode.o
#Output: Machine code loaded successfully from machineCode.o
	 Compiles successfully with all functionalities working.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
